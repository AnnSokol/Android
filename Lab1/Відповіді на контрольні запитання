1) Архітектура застосунку під платформу Андроїд.
    Архітектура Android-додаткf є фреймворк- орієнтованої (framework-based), тобто. зводиться до
    розширення деяких класів або реалізації інтерфейсів, наданих фрейморком.
    Така програма не може бути запущена поза фреймворком чи без нього.
    
2) Загальний огляд компонентів застосунку під Андроїд.
    Основні компоненти програми під Андроїд це:
    - Діяльність (Activity)
    - Служба (Service)
    - Приймач широкомовних намірів (Broadcast Receirved)
    - Контент-провайдер (Content Provider)
    
3) Життєвий цикл компоненту «Діяльність».
    onCreate() -> onStart() -> onResume() -> onPause() -> onStop() -> onRestart() -> onDestroy().
    
4) Життєвий цикл компоненту «Служба».
    Існує 2 форми:
    - started (запущена);
        Якщо компонент запускає Службу викликом методу startService() (який в результаті призведе до виклику
        методу onStartCommand()), то Служба буде працювати, поки не зупинить сама себе методом stopSelf(), або поки що інший
        компонент не зупинить її викликом методу stopService().
    - bound (прив'язана).
        Якщо компонент викликав метод bindService() для створення Служби (і метод onStartCommand() не викликався), то Служба
        працює, поки хоча один компонент залишився прив'язаним до неї (як тільки прибрано всі прив'язки клієнтів до
        Службі, система її знищить).
    
5) Опис процесів платформи Андроїд.
    Як тільки один із компонентів буде затребуваний, система запускає процес, що складається з одного потоку
    виконання.
    Усі компоненти ініціалізуються переважно потоці.

    Система може завершити виконання потоку у разі нестачі пам'яті або якщо пам'ять потрібна іншим,
    Найважливішим процесом.
    При виборі процесу знищення оцінюється його важливість з погляду користувача (тобто в першу
    черга завершиться процес з невидимими Діяльностями).
    Активний процес (процес переднього плану) -> Видимий процес -> Сервісний (службовий) процес -> Фоновый процесс -> Пустой процесс
    
6) Яким чином активуються компоненти застосунку.
    Оскільки система запускає кожну програму в окремому процесі з правами доступу до файлів, які
    обмежують доступ до них іншим програмам, програми не можуть безпосередньо активувати компонент іншої програми.
    Однак система Android може. Тому, щоб використовувати компонент іншої програми, необхідно повідомити системі, що є Намір (Intent) запустити
    компонент будь-якої програми, і система запустить цей компонент.
    
    Компоненти – Діяльність, Служба та Приймач широкомовних намірів – активуються через асинхронні повідомлення - Наміри.
    Наміри пов'язують різні компоненти один з одним реальному часі (безвідносно того, чи це компоненти частиною однієї програми або різних).
    Компонент – Контент-провайдер активується не Намір, запит від класу ContentResolver.
    
7) Призначення файлу маніфесту та його структура.
    Призначення: надає системі основну інформацію щодо додатку:
    - визначає ім'я пакета програми (унікальний ідентифікатор для додатки);
    - описує компоненти програми – Activities, Services, Broadcast Receivers та Content Providers (визначає імена класів,
    реалізують кожен із компонентів і оголошує можливості);
    - містить список необхідних дозволів для звернення до захищеним частинам API та взаємодії з іншими додатками;
    - оголошує дозволи, які сторонні додатки зобов'язані мати для взаємодії з компонентами цієї програми;
    - оголошує мінімальний рівень API Android, необхідний для роботи програми;
    - Перераховує пов'язані бібліотеки.
    
8) Поняття ресурсу та яким чином визначаються ресурси.
    Використання ресурсів дає можливість змінювати деякі частини програми без модифікації вихідного
    коду, а також дозволяє оптимізувати додаток для різних пристроїв (з різною мовою інтерфейсу або розміром екрана)

    Типи ресурсів:
        - зображення;
        - Шари GUI (XML файли);
        - оголошення меню (XML файли);
        - текстові рядки.
